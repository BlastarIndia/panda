{
   // Grammar for Panda
   // Build with Jison (https://jison.org)
   // jison grammar.json --> grammar.js

   // operators by precedence (low to high)
   "operators": [
      ["right",     "POST_IF"],
      ["right",     "IF", "ELSE", "FOR", "WHILE"],
      ["right",     "FORIN", "FOROF", "BY", "WHEN"],
      ["right",     "=", ":", "COMPOUND_ASSIGN", "RETURN", "THROW", "EXTENDS"],
      ["nonassoc",  "INDENT", "OUTDENT"],
      ["left",      "LOGIC"],
      ["left",      "COMPARE"],
      ["left",      "RELATION"],
      ["left",      "SHIFT"],
      ["left",      "MATH"],
      ["right",     "UNARY"],
      ["nonassoc",  "++", "--"],
      ["left",      "+", "-"],
      ["left",      "CALL_START", "CALL_END"]
   ],

   "bnf": {
      "expressions": [["e EOF",   "return $1"]],

      "e" :[
         ["e + e",  "$$ = $1+$3"],
         ["e - e",  "$$ = $1-$3"],
         ["e * e",  "$$ = $1*$3"],
         ["e / e",  "$$ = $1/$3"],
         ["e ^ e",  "$$ = Math.pow($1, $3)"],
         ["- e",    "$$ = -$2", {"prec": "UMINUS"}],
         ["( e )",  "$$ = $2"],
         ["NUMBER", "$$ = Number(yytext)"],
         ["E",      "$$ = Math.E"],
         ["PI",     "$$ = Math.PI"]
      ]
   }
}