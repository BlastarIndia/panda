# First tests
var util = require("util")

def print(arg):
    # comment inside a function
    util.print(arg)
end

def test(name, a, b):
    var str = ""
    var pass = "\x1B[32mâœ” \x1B[39m"

    if a == b:
        str = pass
    else:
        str = "\n\x1B[31mâœ˜ " + name + " failed!\x1B[39m\n"
    end

    print(str)
end

# Basic arithmetic and primitives
test("arithmetic 1", 4 + 4 * (5 - 22) + 5.3 / 2, -61.35)
test("arithmetic 2", 1 - 2, -1)
test("arithmetic 3", - 1, -1)
test("arithmetic 4", 1-2, -1)

test("booleans 1", (false or true) and false == false, true)
test("booleans 2", false and true == false, false)

test(">=", 3 >= 5, false)
test("<=", 3 <= 5, true)

test(">", 3 > 5, false)
test("<", 3 < 5, true)

test("not 1", not true, false)
test("not 2", not false, true)

var a = 5
test("unary minus", -a, 5 - 10)

# conditions
a = 5
var b = true
if a == 5:
    b = false
end

test("if 1", b, false)

a = 5
b = true
if a == 5: b = false end

test("if 2", b, false)

a = 5
b = false
if a == 6:
    b = false
else:
    b = true
end

test("else 1", b, true)

a = 5
b = 0
if a == 1:
    b = 1
else if a == 2:
    b = 2
else if a == 3:
    b = 3
else:
    b = 4
end

test("else/if 1", b, 4)

# lists
var L = []
L = [1]
L = [1, 2, 3, 4, 5]
L = ["test", "test"]

# scope
var x = 0

def testFunc():
    var x = 5
    var y = 4
end

test("scope 1", x, 0)

var y = 0
test("scope 2", y, 0)

# return
def returnFunc():
    return 42
end

test("return 1", returnFunc(), 42)

# for loop
var range2 = [0..3]
for i in range2:
    test("for " + i, i, i)
end

# ranges
var range = [0..3]
var otherRange = [a..b]
var thirdRange = [5..1]
var list = [0, 1, 2, 3]
var equal = true

for i in list:
    equal = equal and range[i] == list[i]
end

test("range 1", equal, true)


# chained comparison
a = 1 < 5 < 10 < 20
b = 10 > 5 > 1 >= -1
var c = 5 > 1 < 10
var d = 1 > 10 < 20

test("chained 1", a, true)
test("chained 2", b, true)
test("chained 3", c, true)
test("chained 4", d, false)


# anonymous function

var empty = def (): end
empty()