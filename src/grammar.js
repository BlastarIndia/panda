/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var grammar = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"Expressions":4,"Expression":5,"Terminator":6,"NEWLINE":7,"Literal":8,"List":9,"Range":10,"Call":11,"Operator":12,"GetConstant":13,"SetConstant":14,"DefLocal":15,"SetLocal":16,"GetLocal":17,"Def":18,"If":19,"(":20,")":21,"NUMBER":22,"STRING":23,"TRUE":24,"FALSE":25,"NONE":26,"COMMENT":27,"EMPTYLINE":28,"[":29,".":30,"]":31,"IDENTIFIER":32,"Arguments":33,"ArgList":34,",":35,"ExpressionList":36,"+":37,"-":38,"*":39,"/":40,"<":41,">":42,">=":43,"<=":44,"==":45,"!=":46,"+=":47,"-=":48,"*=":49,"/=":50,"OR":51,"AND":52,"NOT":53,"VAR":54,"=":55,"Block":56,"START_BLOCK":57,"END_BLOCK":58,"DEF":59,"ParamList":60,"IfBlock":61,"IF":62,"ELSE":63,"$accept":0,"$end":1},
terminals_: {2:"error",7:"NEWLINE",13:"GetConstant",14:"SetConstant",20:"(",21:")",22:"NUMBER",23:"STRING",24:"TRUE",25:"FALSE",26:"NONE",27:"COMMENT",28:"EMPTYLINE",29:"[",30:".",31:"]",32:"IDENTIFIER",35:",",37:"+",38:"-",39:"*",40:"/",41:"<",42:">",43:">=",44:"<=",45:"==",46:"!=",47:"+=",48:"-=",49:"*=",50:"/=",51:"OR",52:"AND",53:"NOT",54:"VAR",55:"=",57:"START_BLOCK",58:"END_BLOCK",59:"DEF",62:"IF",63:"ELSE"},
productions_: [0,[3,0],[3,1],[4,1],[4,3],[4,2],[4,2],[4,1],[6,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,3],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[10,6],[11,2],[11,4],[33,2],[33,3],[34,1],[34,3],[9,2],[9,3],[36,1],[36,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,2],[12,2],[15,4],[16,3],[17,1],[56,2],[56,3],[18,6],[60,0],[60,1],[60,3],[61,3],[61,5],[19,1],[19,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
            this.$ = new n.Nodes(null, createLoc(_$[$0], _$[$0]));
        
break;
case 2:
            this.$ = new n.Nodes($$[$0], createLoc(_$[$0], _$[$0]));
            return this.$;
        
break;
case 3:
            this.$ = new n.Nodes([$$[$0]], createLoc(_$[$0], _$[$0]));
        
break;
case 4:
            this.$ = $$[$0-2].addNode($$[$0]);
        
break;
case 5:
            this.$ = $$[$0-1];
        
break;
case 6:
            this.$ = $$[$0];
        
break;
case 7:
            this.$ = [];
        
break;
case 21:
            this.$ = $$[$0-1];
        
break;
case 22:
            this.$ = new n.NumberNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 23:
            this.$ = new n.StringNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 24:
            this.$ = new n.BooleanNode(true, createLoc(_$[$0], _$[$0]));
        
break;
case 25:
            this.$ = new n.BooleanNode(false, createLoc(_$[$0], _$[$0]));
        
break;
case 26:
            this.$ = new n.NoneNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 27:
            this.$ = new n.CommentNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 28:
            this.$ = new n.EmptyLineNode(createLoc(_$[$0], _$[$0]));
        
break;
case 29:
            this.$ = new n.RangeNode($$[$0-4], $$[$0-1], createLoc(_$[$0-5], _$[$0]));
        
break;
case 30:
            this.$ = new n.CallNode(null, $$[$0-1], $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 31:
            this.$ = new n.CallNode($$[$0-3], $$[$0-1], $$[$0], createLoc(_$[$0-3], _$[$0]));
        
break;
case 32:
            this.$ = [];
        
break;
case 33:
            this.$ = $$[$0-1];
        
break;
case 34:
            this.$ = [$$[$0]];
        
break;
case 35:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 36:
            this.$ = new n.ListNode([], createLoc(_$[$0-1], _$[$0]));
        
break;
case 37:
            this.$ = new n.ListNode($$[$0-1], createLoc(_$[$0-2], _$[$0]));
        
break;
case 38:
            this.$ = [$$[$0]];
        
break;
case 39:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 40:
            this.$ = new n.OperatorNode('+', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 41:
            this.$ = new n.OperatorNode('-', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 42:
            this.$ = new n.OperatorNode('*', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 43:
            this.$ = new n.OperatorNode('/', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 44:
            this.$ = new n.OperatorNode('<', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 45:
            this.$ = new n.OperatorNode('>', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 46:
            this.$ = new n.OperatorNode('>=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 47:
            this.$ = new n.OperatorNode('<=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 48:
            this.$ = new n.OperatorNode('==', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 49:
            this.$ = new n.OperatorNode('!=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 54:
            this.$ = new n.OperatorNode('OR', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 55:
            this.$ = new n.OperatorNode('AND', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 56:
            this.$ = new n.UnaryNode('NOT', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 57:
            this.$ = new n.UnaryNode('-', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 58:
            this.$ = new n.DefLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-3], _$[$0-1]));
        
break;
case 59:
            this.$ = new n.SetLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 60:
            this.$ = new n.GetLocalNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 61:
            this.$ = [];
        
break;
case 62:
            this.$ = $$[$0-1];
        
break;
case 63:
            this.$ = new n.DefNode($$[$0-4], $$[$0-2], $$[$0], createLoc(_$[$0-5], _$[$0]));
        
break;
case 64:
            this.$ = [];
        
break;
case 65:
            this.$ = [$$[$0]];
        
break;
case 66:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 67:
            this.$ = new n.IfNode($$[$0-1], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 68:
            this.$ = $$[$0-4].addElse($$[$0-1], $$[$0], false);
        
break;
case 70:
            this.$ = $$[$0-2].addElse(null, $$[$0], true);
        
break;
}
},
table: [{1:[2,1],3:1,4:2,5:3,6:4,7:[1,18],8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[3]},{1:[2,2],6:34,7:[1,18]},{1:[2,3],7:[2,3],30:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],58:[2,3]},{1:[2,7],4:52,5:3,6:4,7:[1,18],8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],58:[2,7],59:[1,31],61:32,62:[1,33]},{1:[2,9],7:[2,9],21:[2,9],30:[2,9],31:[2,9],35:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[2,9],41:[2,9],42:[2,9],43:[2,9],44:[2,9],45:[2,9],46:[2,9],47:[2,9],48:[2,9],49:[2,9],50:[2,9],51:[2,9],52:[2,9],57:[2,9],58:[2,9]},{1:[2,10],7:[2,10],21:[2,10],30:[2,10],31:[2,10],35:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],41:[2,10],42:[2,10],43:[2,10],44:[2,10],45:[2,10],46:[2,10],47:[2,10],48:[2,10],49:[2,10],50:[2,10],51:[2,10],52:[2,10],57:[2,10],58:[2,10]},{1:[2,11],7:[2,11],21:[2,11],30:[2,11],31:[2,11],35:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],41:[2,11],42:[2,11],43:[2,11],44:[2,11],45:[2,11],46:[2,11],47:[2,11],48:[2,11],49:[2,11],50:[2,11],51:[2,11],52:[2,11],57:[2,11],58:[2,11]},{1:[2,12],7:[2,12],21:[2,12],30:[2,12],31:[2,12],35:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],41:[2,12],42:[2,12],43:[2,12],44:[2,12],45:[2,12],46:[2,12],47:[2,12],48:[2,12],49:[2,12],50:[2,12],51:[2,12],52:[2,12],57:[2,12],58:[2,12]},{1:[2,13],7:[2,13],21:[2,13],30:[2,13],31:[2,13],35:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],41:[2,13],42:[2,13],43:[2,13],44:[2,13],45:[2,13],46:[2,13],47:[2,13],48:[2,13],49:[2,13],50:[2,13],51:[2,13],52:[2,13],57:[2,13],58:[2,13]},{1:[2,14],7:[2,14],21:[2,14],30:[2,14],31:[2,14],35:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],42:[2,14],43:[2,14],44:[2,14],45:[2,14],46:[2,14],47:[2,14],48:[2,14],49:[2,14],50:[2,14],51:[2,14],52:[2,14],57:[2,14],58:[2,14]},{1:[2,15],7:[2,15],21:[2,15],30:[2,15],31:[2,15],35:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],42:[2,15],43:[2,15],44:[2,15],45:[2,15],46:[2,15],47:[2,15],48:[2,15],49:[2,15],50:[2,15],51:[2,15],52:[2,15],57:[2,15],58:[2,15]},{1:[2,16],7:[2,16],21:[2,16],30:[2,16],31:[2,16],35:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],42:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],47:[2,16],48:[2,16],49:[2,16],50:[2,16],51:[2,16],52:[2,16],57:[2,16],58:[2,16]},{1:[2,17],7:[2,17],21:[2,17],30:[2,17],31:[2,17],35:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],41:[2,17],42:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],47:[2,17],48:[2,17],49:[2,17],50:[2,17],51:[2,17],52:[2,17],57:[2,17],58:[2,17]},{1:[2,18],7:[2,18],21:[2,18],30:[2,18],31:[2,18],35:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],41:[2,18],42:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],47:[2,18],48:[2,18],49:[2,18],50:[2,18],51:[2,18],52:[2,18],57:[2,18],58:[2,18]},{1:[2,19],7:[2,19],21:[2,19],30:[2,19],31:[2,19],35:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],41:[2,19],42:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],47:[2,19],48:[2,19],49:[2,19],50:[2,19],51:[2,19],52:[2,19],57:[2,19],58:[2,19]},{1:[2,20],7:[2,20],21:[2,20],30:[2,20],31:[2,20],35:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],41:[2,20],42:[2,20],43:[2,20],44:[2,20],45:[2,20],46:[2,20],47:[2,20],48:[2,20],49:[2,20],50:[2,20],51:[2,20],52:[2,20],57:[2,20],58:[2,20]},{5:53,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,8],7:[2,8],13:[2,8],14:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],32:[2,8],38:[2,8],53:[2,8],54:[2,8],58:[2,8],59:[2,8],62:[2,8]},{1:[2,22],7:[2,22],21:[2,22],30:[2,22],31:[2,22],35:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],41:[2,22],42:[2,22],43:[2,22],44:[2,22],45:[2,22],46:[2,22],47:[2,22],48:[2,22],49:[2,22],50:[2,22],51:[2,22],52:[2,22],57:[2,22],58:[2,22]},{1:[2,23],7:[2,23],21:[2,23],30:[2,23],31:[2,23],35:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],41:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],47:[2,23],48:[2,23],49:[2,23],50:[2,23],51:[2,23],52:[2,23],57:[2,23],58:[2,23]},{1:[2,24],7:[2,24],21:[2,24],30:[2,24],31:[2,24],35:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],41:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],47:[2,24],48:[2,24],49:[2,24],50:[2,24],51:[2,24],52:[2,24],57:[2,24],58:[2,24]},{1:[2,25],7:[2,25],21:[2,25],30:[2,25],31:[2,25],35:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],41:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],47:[2,25],48:[2,25],49:[2,25],50:[2,25],51:[2,25],52:[2,25],57:[2,25],58:[2,25]},{1:[2,26],7:[2,26],21:[2,26],30:[2,26],31:[2,26],35:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],41:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],47:[2,26],48:[2,26],49:[2,26],50:[2,26],51:[2,26],52:[2,26],57:[2,26],58:[2,26]},{1:[2,27],7:[2,27],21:[2,27],30:[2,27],31:[2,27],35:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],41:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],57:[2,27],58:[2,27]},{1:[2,28],7:[2,28],21:[2,28],30:[2,28],31:[2,28],35:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],41:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],57:[2,28],58:[2,28]},{5:56,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],31:[1,54],32:[1,27],36:55,38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,60],7:[2,60],20:[1,59],21:[2,60],30:[2,60],31:[2,60],33:57,35:[2,60],37:[2,60],38:[2,60],39:[2,60],40:[2,60],41:[2,60],42:[2,60],43:[2,60],44:[2,60],45:[2,60],46:[2,60],47:[2,60],48:[2,60],49:[2,60],50:[2,60],51:[2,60],52:[2,60],55:[1,58],57:[2,60],58:[2,60]},{5:60,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:61,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{32:[1,62]},{32:[1,63]},{1:[2,69],7:[2,69],21:[2,69],30:[2,69],31:[2,69],35:[2,69],37:[2,69],38:[2,69],39:[2,69],40:[2,69],41:[2,69],42:[2,69],43:[2,69],44:[2,69],45:[2,69],46:[2,69],47:[2,69],48:[2,69],49:[2,69],50:[2,69],51:[2,69],52:[2,69],57:[2,69],58:[2,69],63:[1,64]},{5:65,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,5],5:66,7:[2,5],8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],58:[2,5],59:[1,31],61:32,62:[1,33]},{32:[1,67]},{5:68,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:69,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:70,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:71,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:72,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:73,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:74,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:75,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:76,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:77,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:78,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:79,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:80,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:81,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:82,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:83,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,6],6:34,7:[1,18],58:[2,6]},{21:[1,84],30:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{1:[2,36],7:[2,36],21:[2,36],30:[2,36],31:[2,36],35:[2,36],37:[2,36],38:[2,36],39:[2,36],40:[2,36],41:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],57:[2,36],58:[2,36]},{31:[1,85],35:[1,86]},{30:[1,87],31:[2,38],35:[2,38],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{1:[2,30],7:[2,30],21:[2,30],30:[2,30],31:[2,30],35:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[2,30],41:[2,30],42:[2,30],43:[2,30],44:[2,30],45:[2,30],46:[2,30],47:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],57:[2,30],58:[2,30]},{5:88,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{5:91,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],21:[1,89],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],34:90,38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,56],7:[2,56],21:[2,56],30:[1,35],31:[2,56],35:[2,56],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,56],58:[2,56]},{1:[2,57],7:[2,57],21:[2,57],30:[1,35],31:[2,57],35:[2,57],37:[2,57],38:[2,57],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,57],46:[2,57],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,57],52:[2,57],57:[2,57],58:[2,57]},{55:[1,92]},{20:[1,93]},{56:94,57:[1,96],62:[1,95]},{30:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],56:97,57:[1,96]},{1:[2,4],7:[2,4],30:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],58:[2,4]},{20:[1,59],33:98},{1:[2,40],7:[2,40],21:[2,40],30:[1,35],31:[2,40],35:[2,40],37:[2,40],38:[2,40],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,40],46:[2,40],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,40],52:[2,40],57:[2,40],58:[2,40]},{1:[2,41],7:[2,41],21:[2,41],30:[1,35],31:[2,41],35:[2,41],37:[2,41],38:[2,41],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,41],46:[2,41],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,41],52:[2,41],57:[2,41],58:[2,41]},{1:[2,42],7:[2,42],21:[2,42],30:[1,35],31:[2,42],35:[2,42],37:[2,42],38:[2,42],39:[2,42],40:[2,42],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,42],46:[2,42],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,42],52:[2,42],57:[2,42],58:[2,42]},{1:[2,43],7:[2,43],21:[2,43],30:[1,35],31:[2,43],35:[2,43],37:[2,43],38:[2,43],39:[2,43],40:[2,43],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,43],46:[2,43],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,43],52:[2,43],57:[2,43],58:[2,43]},{1:[2,44],7:[2,44],21:[2,44],30:[1,35],31:[2,44],35:[2,44],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,44],58:[2,44]},{1:[2,45],7:[2,45],21:[2,45],30:[1,35],31:[2,45],35:[2,45],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,45],58:[2,45]},{1:[2,46],7:[2,46],21:[2,46],30:[1,35],31:[2,46],35:[2,46],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,46],58:[2,46]},{1:[2,47],7:[2,47],21:[2,47],30:[1,35],31:[2,47],35:[2,47],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,47],58:[2,47]},{1:[2,48],7:[2,48],21:[2,48],30:[1,35],31:[2,48],35:[2,48],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,48],46:[2,48],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,48],52:[2,48],57:[2,48],58:[2,48]},{1:[2,49],7:[2,49],21:[2,49],30:[1,35],31:[2,49],35:[2,49],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[2,49],46:[2,49],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,49],52:[2,49],57:[2,49],58:[2,49]},{1:[2,50],7:[2,50],21:[2,50],30:[1,35],31:[2,50],35:[2,50],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,50],58:[2,50]},{1:[2,51],7:[2,51],21:[2,51],30:[1,35],31:[2,51],35:[2,51],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,51],58:[2,51]},{1:[2,52],7:[2,52],21:[2,52],30:[1,35],31:[2,52],35:[2,52],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,52],58:[2,52]},{1:[2,53],7:[2,53],21:[2,53],30:[1,35],31:[2,53],35:[2,53],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],57:[2,53],58:[2,53]},{1:[2,54],7:[2,54],21:[2,54],30:[1,35],31:[2,54],35:[2,54],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,54],52:[1,51],57:[2,54],58:[2,54]},{1:[2,55],7:[2,55],21:[2,55],30:[1,35],31:[2,55],35:[2,55],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,55],52:[2,55],57:[2,55],58:[2,55]},{1:[2,21],7:[2,21],21:[2,21],30:[2,21],31:[2,21],35:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],41:[2,21],42:[2,21],43:[2,21],44:[2,21],45:[2,21],46:[2,21],47:[2,21],48:[2,21],49:[2,21],50:[2,21],51:[2,21],52:[2,21],57:[2,21],58:[2,21]},{1:[2,37],7:[2,37],21:[2,37],30:[2,37],31:[2,37],35:[2,37],37:[2,37],38:[2,37],39:[2,37],40:[2,37],41:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],47:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],57:[2,37],58:[2,37]},{5:99,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{30:[1,100],32:[1,67]},{1:[2,59],7:[2,59],21:[2,59],30:[1,35],31:[2,59],35:[2,59],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,59],52:[2,59],57:[2,59],58:[2,59]},{1:[2,32],7:[2,32],21:[2,32],30:[2,32],31:[2,32],35:[2,32],37:[2,32],38:[2,32],39:[2,32],40:[2,32],41:[2,32],42:[2,32],43:[2,32],44:[2,32],45:[2,32],46:[2,32],47:[2,32],48:[2,32],49:[2,32],50:[2,32],51:[2,32],52:[2,32],57:[2,32],58:[2,32]},{21:[1,101],35:[1,102]},{21:[2,34],30:[1,35],35:[2,34],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{5:103,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{21:[2,64],32:[1,105],35:[2,64],60:104},{1:[2,70],7:[2,70],21:[2,70],30:[2,70],31:[2,70],35:[2,70],37:[2,70],38:[2,70],39:[2,70],40:[2,70],41:[2,70],42:[2,70],43:[2,70],44:[2,70],45:[2,70],46:[2,70],47:[2,70],48:[2,70],49:[2,70],50:[2,70],51:[2,70],52:[2,70],57:[2,70],58:[2,70]},{5:106,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{4:108,5:3,6:4,7:[1,18],8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],58:[1,107],59:[1,31],61:32,62:[1,33]},{1:[2,67],7:[2,67],21:[2,67],30:[2,67],31:[2,67],35:[2,67],37:[2,67],38:[2,67],39:[2,67],40:[2,67],41:[2,67],42:[2,67],43:[2,67],44:[2,67],45:[2,67],46:[2,67],47:[2,67],48:[2,67],49:[2,67],50:[2,67],51:[2,67],52:[2,67],57:[2,67],58:[2,67],63:[2,67]},{1:[2,31],7:[2,31],21:[2,31],30:[2,31],31:[2,31],35:[2,31],37:[2,31],38:[2,31],39:[2,31],40:[2,31],41:[2,31],42:[2,31],43:[2,31],44:[2,31],45:[2,31],46:[2,31],47:[2,31],48:[2,31],49:[2,31],50:[2,31],51:[2,31],52:[2,31],57:[2,31],58:[2,31]},{30:[1,35],31:[2,39],35:[2,39],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{5:109,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,33],7:[2,33],21:[2,33],30:[2,33],31:[2,33],35:[2,33],37:[2,33],38:[2,33],39:[2,33],40:[2,33],41:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],46:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[2,33],51:[2,33],52:[2,33],57:[2,33],58:[2,33]},{5:110,8:5,9:6,10:7,11:8,12:9,13:[1,10],14:[1,11],15:12,16:13,17:14,18:15,19:16,20:[1,17],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,24],28:[1,25],29:[1,26],32:[1,27],38:[1,29],53:[1,28],54:[1,30],59:[1,31],61:32,62:[1,33]},{1:[2,58],7:[2,58],21:[2,58],30:[1,35],31:[2,58],35:[2,58],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[2,58],52:[2,58],57:[2,58],58:[2,58]},{21:[1,111],35:[1,112]},{21:[2,65],35:[2,65]},{30:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51],56:113,57:[1,96]},{1:[2,61],7:[2,61],21:[2,61],30:[2,61],31:[2,61],35:[2,61],37:[2,61],38:[2,61],39:[2,61],40:[2,61],41:[2,61],42:[2,61],43:[2,61],44:[2,61],45:[2,61],46:[2,61],47:[2,61],48:[2,61],49:[2,61],50:[2,61],51:[2,61],52:[2,61],57:[2,61],58:[2,61],63:[2,61]},{6:34,7:[1,18],58:[1,114]},{30:[1,35],31:[1,115],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{21:[2,35],30:[1,35],35:[2,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],51:[1,50],52:[1,51]},{56:116,57:[1,96]},{32:[1,117]},{1:[2,68],7:[2,68],21:[2,68],30:[2,68],31:[2,68],35:[2,68],37:[2,68],38:[2,68],39:[2,68],40:[2,68],41:[2,68],42:[2,68],43:[2,68],44:[2,68],45:[2,68],46:[2,68],47:[2,68],48:[2,68],49:[2,68],50:[2,68],51:[2,68],52:[2,68],57:[2,68],58:[2,68],63:[2,68]},{1:[2,62],7:[2,62],21:[2,62],30:[2,62],31:[2,62],35:[2,62],37:[2,62],38:[2,62],39:[2,62],40:[2,62],41:[2,62],42:[2,62],43:[2,62],44:[2,62],45:[2,62],46:[2,62],47:[2,62],48:[2,62],49:[2,62],50:[2,62],51:[2,62],52:[2,62],57:[2,62],58:[2,62],63:[2,62]},{1:[2,29],7:[2,29],21:[2,29],30:[2,29],31:[2,29],35:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],41:[2,29],42:[2,29],43:[2,29],44:[2,29],45:[2,29],46:[2,29],47:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],57:[2,29],58:[2,29]},{1:[2,63],7:[2,63],21:[2,63],30:[2,63],31:[2,63],35:[2,63],37:[2,63],38:[2,63],39:[2,63],40:[2,63],41:[2,63],42:[2,63],43:[2,63],44:[2,63],45:[2,63],46:[2,63],47:[2,63],48:[2,63],49:[2,63],50:[2,63],51:[2,63],52:[2,63],57:[2,63],58:[2,63]},{21:[2,66],35:[2,66]}],
defaultActions: {},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

// End Grammar




var n = require('./nodes');

// This is taken from
// https://github.com/cjihrig/jsparser
function SourceLocation(source, start, end, loc) {
    this.source = source;
    this.start = start;
    this.end = end;
}

function createLoc(firstToken, lastToken) {
    return new SourceLocation(
        null,
        new Position(firstToken.first_line, firstToken.first_column),
        new Position(lastToken.last_line, lastToken.last_column)
    );
}

function Position(line, column) {
    this.line = line;
    this.column = column;
}

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = grammar;
exports.Parser = grammar.Parser;
exports.parse = function () { return grammar.parse.apply(grammar, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}