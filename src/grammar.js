/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var grammar = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"Expressions":4,"Expression":5,"Terminator":6,"NEWLINE":7,"Literal":8,"List":9,"Call":10,"Operator":11,"GetConstant":12,"SetConstant":13,"DefLocal":14,"SetLocal":15,"GetLocal":16,"Def":17,"If":18,"(":19,")":20,"NUMBER":21,"STRING":22,"TRUE":23,"FALSE":24,"NONE":25,"COMMENT":26,"IDENTIFIER":27,"Arguments":28,".":29,"ArgList":30,",":31,"[":32,"]":33,"ExpressionList":34,"+":35,"-":36,"*":37,"/":38,"<":39,">":40,">=":41,"<=":42,"==":43,"!=":44,"+=":45,"-=":46,"*=":47,"/=":48,"OR":49,"AND":50,"NOT":51,"VAR":52,"=":53,"Block":54,"START_BLOCK":55,"END_BLOCK":56,"DEF":57,"ParamList":58,"IfBlock":59,"IF":60,"ELSE":61,"$accept":0,"$end":1},
terminals_: {2:"error",7:"NEWLINE",12:"GetConstant",13:"SetConstant",19:"(",20:")",21:"NUMBER",22:"STRING",23:"TRUE",24:"FALSE",25:"NONE",26:"COMMENT",27:"IDENTIFIER",29:".",31:",",32:"[",33:"]",35:"+",36:"-",37:"*",38:"/",39:"<",40:">",41:">=",42:"<=",43:"==",44:"!=",45:"+=",46:"-=",47:"*=",48:"/=",49:"OR",50:"AND",51:"NOT",52:"VAR",53:"=",55:"START_BLOCK",56:"END_BLOCK",57:"DEF",60:"IF",61:"ELSE"},
productions_: [0,[3,0],[3,1],[4,1],[4,3],[4,2],[4,2],[4,1],[6,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,3],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[10,2],[10,4],[28,2],[28,3],[30,1],[30,3],[9,2],[9,3],[34,1],[34,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,2],[14,4],[15,3],[16,1],[54,2],[54,3],[17,6],[58,0],[58,1],[58,3],[59,3],[59,5],[18,1],[18,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
            this.$ = new n.Nodes(null, createLoc(_$[$0], _$[$0]));
        
break;
case 2:
            this.$ = new n.Nodes($$[$0], createLoc(_$[$0], _$[$0]));
            return this.$;
        
break;
case 3:
            this.$ = new n.Nodes([$$[$0]], createLoc(_$[$0], _$[$0]));
        
break;
case 4:
            this.$ = $$[$0-2].addNode($$[$0]);
        
break;
case 5:
            this.$ = $$[$0-1];
        
break;
case 6:
            this.$ = $$[$0];
        
break;
case 7:
            this.$ = [];
        
break;
case 20:
            this.$ = $$[$0-1];
        
break;
case 21:
            this.$ = new n.NumberNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 22:
            this.$ = new n.StringNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 23:
            this.$ = new n.BooleanNode(true, createLoc(_$[$0], _$[$0]));
        
break;
case 24:
            this.$ = new n.BooleanNode(false, createLoc(_$[$0], _$[$0]));
        
break;
case 25:
            this.$ = new n.NoneNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 26:
            this.$ = new n.CommentNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 27:
            this.$ = new n.CallNode(null, $$[$0-1], $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 28:
            this.$ = new n.CallNode($$[$0-3], $$[$0-1], $$[$0], createLoc(_$[$0-3], _$[$0]));
        
break;
case 29:
            this.$ = [];
        
break;
case 30:
            this.$ = $$[$0-1];
        
break;
case 31:
            this.$ = [$$[$0]];
        
break;
case 32:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 33:
            this.$ = new n.ListNode([]);
        
break;
case 34:
            this.$ = new n.ListNode($$[$0-1]);
        
break;
case 35:
            this.$ = [$$[$0]];
        
break;
case 36:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 37:
            this.$ = new n.OperatorNode('+', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 38:
            this.$ = new n.OperatorNode('-', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 39:
            this.$ = new n.OperatorNode('*', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 40:
            this.$ = new n.OperatorNode('/', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 41:
            this.$ = new n.OperatorNode('<', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 42:
            this.$ = new n.OperatorNode('>', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 43:
            this.$ = new n.OperatorNode('>=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 44:
            this.$ = new n.OperatorNode('<=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 45:
            this.$ = new n.OperatorNode('==', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 46:
            this.$ = new n.OperatorNode('!=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 51:
            this.$ = new n.OperatorNode('OR', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 52:
            this.$ = new n.OperatorNode('AND', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 53:
            this.$ = new n.UnaryNode('NOT', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 54:
            this.$ = new n.UnaryNode('-', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 55:
            this.$ = new n.DefLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-3], _$[$0-1]));
        
break;
case 56:
            this.$ = new n.SetLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 57:
            this.$ = new n.GetLocalNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 58:
            this.$ = [];
        
break;
case 59:
            this.$ = $$[$0-1];
        
break;
case 60:
            this.$ = new n.DefNode($$[$0-4], $$[$0-2], $$[$0], createLoc(_$[$0-5], _$[$0]));
        
break;
case 61:
            this.$ = [];
        
break;
case 62:
            this.$ = [$$[$0]];
        
break;
case 63:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 64:
            this.$ = new n.IfNode($$[$0-1], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 65:
            this.$ = $$[$0-4].addElse($$[$0-1], $$[$0], false);
        
break;
case 67:
            this.$ = $$[$0-2].addElse(null, $$[$0], true);
        
break;
}
},
table: [{1:[2,1],3:1,4:2,5:3,6:4,7:[1,17],8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[3]},{1:[2,2],6:32,7:[1,17]},{1:[2,3],7:[2,3],29:[1,33],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],56:[2,3]},{1:[2,7],4:50,5:3,6:4,7:[1,17],8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],56:[2,7],57:[1,29],59:30,60:[1,31]},{1:[2,9],7:[2,9],20:[2,9],29:[2,9],31:[2,9],33:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[2,9],41:[2,9],42:[2,9],43:[2,9],44:[2,9],45:[2,9],46:[2,9],47:[2,9],48:[2,9],49:[2,9],50:[2,9],55:[2,9],56:[2,9]},{1:[2,10],7:[2,10],20:[2,10],29:[2,10],31:[2,10],33:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],41:[2,10],42:[2,10],43:[2,10],44:[2,10],45:[2,10],46:[2,10],47:[2,10],48:[2,10],49:[2,10],50:[2,10],55:[2,10],56:[2,10]},{1:[2,11],7:[2,11],20:[2,11],29:[2,11],31:[2,11],33:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],41:[2,11],42:[2,11],43:[2,11],44:[2,11],45:[2,11],46:[2,11],47:[2,11],48:[2,11],49:[2,11],50:[2,11],55:[2,11],56:[2,11]},{1:[2,12],7:[2,12],20:[2,12],29:[2,12],31:[2,12],33:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],41:[2,12],42:[2,12],43:[2,12],44:[2,12],45:[2,12],46:[2,12],47:[2,12],48:[2,12],49:[2,12],50:[2,12],55:[2,12],56:[2,12]},{1:[2,13],7:[2,13],20:[2,13],29:[2,13],31:[2,13],33:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],41:[2,13],42:[2,13],43:[2,13],44:[2,13],45:[2,13],46:[2,13],47:[2,13],48:[2,13],49:[2,13],50:[2,13],55:[2,13],56:[2,13]},{1:[2,14],7:[2,14],20:[2,14],29:[2,14],31:[2,14],33:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],42:[2,14],43:[2,14],44:[2,14],45:[2,14],46:[2,14],47:[2,14],48:[2,14],49:[2,14],50:[2,14],55:[2,14],56:[2,14]},{1:[2,15],7:[2,15],20:[2,15],29:[2,15],31:[2,15],33:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],42:[2,15],43:[2,15],44:[2,15],45:[2,15],46:[2,15],47:[2,15],48:[2,15],49:[2,15],50:[2,15],55:[2,15],56:[2,15]},{1:[2,16],7:[2,16],20:[2,16],29:[2,16],31:[2,16],33:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],42:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],47:[2,16],48:[2,16],49:[2,16],50:[2,16],55:[2,16],56:[2,16]},{1:[2,17],7:[2,17],20:[2,17],29:[2,17],31:[2,17],33:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],41:[2,17],42:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],47:[2,17],48:[2,17],49:[2,17],50:[2,17],55:[2,17],56:[2,17]},{1:[2,18],7:[2,18],20:[2,18],29:[2,18],31:[2,18],33:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],41:[2,18],42:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],47:[2,18],48:[2,18],49:[2,18],50:[2,18],55:[2,18],56:[2,18]},{1:[2,19],7:[2,19],20:[2,19],29:[2,19],31:[2,19],33:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],41:[2,19],42:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],47:[2,19],48:[2,19],49:[2,19],50:[2,19],55:[2,19],56:[2,19]},{5:51,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,8],7:[2,8],12:[2,8],13:[2,8],19:[2,8],21:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],32:[2,8],36:[2,8],51:[2,8],52:[2,8],56:[2,8],57:[2,8],60:[2,8]},{1:[2,21],7:[2,21],20:[2,21],29:[2,21],31:[2,21],33:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],41:[2,21],42:[2,21],43:[2,21],44:[2,21],45:[2,21],46:[2,21],47:[2,21],48:[2,21],49:[2,21],50:[2,21],55:[2,21],56:[2,21]},{1:[2,22],7:[2,22],20:[2,22],29:[2,22],31:[2,22],33:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],41:[2,22],42:[2,22],43:[2,22],44:[2,22],45:[2,22],46:[2,22],47:[2,22],48:[2,22],49:[2,22],50:[2,22],55:[2,22],56:[2,22]},{1:[2,23],7:[2,23],20:[2,23],29:[2,23],31:[2,23],33:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],41:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],47:[2,23],48:[2,23],49:[2,23],50:[2,23],55:[2,23],56:[2,23]},{1:[2,24],7:[2,24],20:[2,24],29:[2,24],31:[2,24],33:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],41:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],47:[2,24],48:[2,24],49:[2,24],50:[2,24],55:[2,24],56:[2,24]},{1:[2,25],7:[2,25],20:[2,25],29:[2,25],31:[2,25],33:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],41:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],47:[2,25],48:[2,25],49:[2,25],50:[2,25],55:[2,25],56:[2,25]},{1:[2,26],7:[2,26],20:[2,26],29:[2,26],31:[2,26],33:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],41:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],47:[2,26],48:[2,26],49:[2,26],50:[2,26],55:[2,26],56:[2,26]},{5:54,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],33:[1,52],34:53,36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,57],7:[2,57],19:[1,57],20:[2,57],28:55,29:[2,57],31:[2,57],33:[2,57],35:[2,57],36:[2,57],37:[2,57],38:[2,57],39:[2,57],40:[2,57],41:[2,57],42:[2,57],43:[2,57],44:[2,57],45:[2,57],46:[2,57],47:[2,57],48:[2,57],49:[2,57],50:[2,57],53:[1,56],55:[2,57],56:[2,57]},{5:58,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:59,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{27:[1,60]},{27:[1,61]},{1:[2,66],7:[2,66],20:[2,66],29:[2,66],31:[2,66],33:[2,66],35:[2,66],36:[2,66],37:[2,66],38:[2,66],39:[2,66],40:[2,66],41:[2,66],42:[2,66],43:[2,66],44:[2,66],45:[2,66],46:[2,66],47:[2,66],48:[2,66],49:[2,66],50:[2,66],55:[2,66],56:[2,66],61:[1,62]},{5:63,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,5],5:64,7:[2,5],8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],56:[2,5],57:[1,29],59:30,60:[1,31]},{27:[1,65]},{5:66,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:67,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:68,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:69,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:70,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:71,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:72,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:73,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:74,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:75,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:76,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:77,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:78,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:79,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:80,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:81,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,6],6:32,7:[1,17],56:[2,6]},{20:[1,82],29:[1,33],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49]},{1:[2,33],7:[2,33],20:[2,33],29:[2,33],31:[2,33],33:[2,33],35:[2,33],36:[2,33],37:[2,33],38:[2,33],39:[2,33],40:[2,33],41:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],46:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[2,33],55:[2,33],56:[2,33]},{31:[1,84],33:[1,83]},{29:[1,33],31:[2,35],33:[2,35],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49]},{1:[2,27],7:[2,27],20:[2,27],29:[2,27],31:[2,27],33:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],41:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],55:[2,27],56:[2,27]},{5:85,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{5:88,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],20:[1,86],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],30:87,32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,53],7:[2,53],20:[2,53],29:[1,33],31:[2,53],33:[2,53],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,53],56:[2,53]},{1:[2,54],7:[2,54],20:[2,54],29:[1,33],31:[2,54],33:[2,54],35:[2,54],36:[2,54],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,54],44:[2,54],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,54],50:[2,54],55:[2,54],56:[2,54]},{53:[1,89]},{19:[1,90]},{54:91,55:[1,93],60:[1,92]},{29:[1,33],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],54:94,55:[1,93]},{1:[2,4],7:[2,4],29:[1,33],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],56:[2,4]},{19:[1,57],28:95},{1:[2,37],7:[2,37],20:[2,37],29:[1,33],31:[2,37],33:[2,37],35:[2,37],36:[2,37],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,37],44:[2,37],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,37],50:[2,37],55:[2,37],56:[2,37]},{1:[2,38],7:[2,38],20:[2,38],29:[1,33],31:[2,38],33:[2,38],35:[2,38],36:[2,38],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,38],44:[2,38],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,38],50:[2,38],55:[2,38],56:[2,38]},{1:[2,39],7:[2,39],20:[2,39],29:[1,33],31:[2,39],33:[2,39],35:[2,39],36:[2,39],37:[2,39],38:[2,39],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,39],44:[2,39],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,39],50:[2,39],55:[2,39],56:[2,39]},{1:[2,40],7:[2,40],20:[2,40],29:[1,33],31:[2,40],33:[2,40],35:[2,40],36:[2,40],37:[2,40],38:[2,40],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,40],44:[2,40],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,40],50:[2,40],55:[2,40],56:[2,40]},{1:[2,41],7:[2,41],20:[2,41],29:[1,33],31:[2,41],33:[2,41],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,41],56:[2,41]},{1:[2,42],7:[2,42],20:[2,42],29:[1,33],31:[2,42],33:[2,42],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,42],56:[2,42]},{1:[2,43],7:[2,43],20:[2,43],29:[1,33],31:[2,43],33:[2,43],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,43],56:[2,43]},{1:[2,44],7:[2,44],20:[2,44],29:[1,33],31:[2,44],33:[2,44],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,44],56:[2,44]},{1:[2,45],7:[2,45],20:[2,45],29:[1,33],31:[2,45],33:[2,45],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,45],44:[2,45],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,45],50:[2,45],55:[2,45],56:[2,45]},{1:[2,46],7:[2,46],20:[2,46],29:[1,33],31:[2,46],33:[2,46],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[2,46],44:[2,46],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,46],50:[2,46],55:[2,46],56:[2,46]},{1:[2,47],7:[2,47],20:[2,47],29:[1,33],31:[2,47],33:[2,47],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,47],56:[2,47]},{1:[2,48],7:[2,48],20:[2,48],29:[1,33],31:[2,48],33:[2,48],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,48],56:[2,48]},{1:[2,49],7:[2,49],20:[2,49],29:[1,33],31:[2,49],33:[2,49],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,49],56:[2,49]},{1:[2,50],7:[2,50],20:[2,50],29:[1,33],31:[2,50],33:[2,50],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],55:[2,50],56:[2,50]},{1:[2,51],7:[2,51],20:[2,51],29:[1,33],31:[2,51],33:[2,51],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,51],50:[1,49],55:[2,51],56:[2,51]},{1:[2,52],7:[2,52],20:[2,52],29:[1,33],31:[2,52],33:[2,52],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,52],50:[2,52],55:[2,52],56:[2,52]},{1:[2,20],7:[2,20],20:[2,20],29:[2,20],31:[2,20],33:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],41:[2,20],42:[2,20],43:[2,20],44:[2,20],45:[2,20],46:[2,20],47:[2,20],48:[2,20],49:[2,20],50:[2,20],55:[2,20],56:[2,20]},{1:[2,34],7:[2,34],20:[2,34],29:[2,34],31:[2,34],33:[2,34],35:[2,34],36:[2,34],37:[2,34],38:[2,34],39:[2,34],40:[2,34],41:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],47:[2,34],48:[2,34],49:[2,34],50:[2,34],55:[2,34],56:[2,34]},{5:96,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,56],7:[2,56],20:[2,56],29:[1,33],31:[2,56],33:[2,56],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,56],50:[2,56],55:[2,56],56:[2,56]},{1:[2,29],7:[2,29],20:[2,29],29:[2,29],31:[2,29],33:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],41:[2,29],42:[2,29],43:[2,29],44:[2,29],45:[2,29],46:[2,29],47:[2,29],48:[2,29],49:[2,29],50:[2,29],55:[2,29],56:[2,29]},{20:[1,97],31:[1,98]},{20:[2,31],29:[1,33],31:[2,31],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49]},{5:99,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{20:[2,61],27:[1,101],31:[2,61],58:100},{1:[2,67],7:[2,67],20:[2,67],29:[2,67],31:[2,67],33:[2,67],35:[2,67],36:[2,67],37:[2,67],38:[2,67],39:[2,67],40:[2,67],41:[2,67],42:[2,67],43:[2,67],44:[2,67],45:[2,67],46:[2,67],47:[2,67],48:[2,67],49:[2,67],50:[2,67],55:[2,67],56:[2,67]},{5:102,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{4:104,5:3,6:4,7:[1,17],8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],56:[1,103],57:[1,29],59:30,60:[1,31]},{1:[2,64],7:[2,64],20:[2,64],29:[2,64],31:[2,64],33:[2,64],35:[2,64],36:[2,64],37:[2,64],38:[2,64],39:[2,64],40:[2,64],41:[2,64],42:[2,64],43:[2,64],44:[2,64],45:[2,64],46:[2,64],47:[2,64],48:[2,64],49:[2,64],50:[2,64],55:[2,64],56:[2,64],61:[2,64]},{1:[2,28],7:[2,28],20:[2,28],29:[2,28],31:[2,28],33:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],41:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],55:[2,28],56:[2,28]},{29:[1,33],31:[2,36],33:[2,36],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49]},{1:[2,30],7:[2,30],20:[2,30],29:[2,30],31:[2,30],33:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[2,30],41:[2,30],42:[2,30],43:[2,30],44:[2,30],45:[2,30],46:[2,30],47:[2,30],48:[2,30],49:[2,30],50:[2,30],55:[2,30],56:[2,30]},{5:105,8:5,9:6,10:7,11:8,12:[1,9],13:[1,10],14:11,15:12,16:13,17:14,18:15,19:[1,16],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],27:[1,25],32:[1,24],36:[1,27],51:[1,26],52:[1,28],57:[1,29],59:30,60:[1,31]},{1:[2,55],7:[2,55],20:[2,55],29:[1,33],31:[2,55],33:[2,55],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[2,55],50:[2,55],55:[2,55],56:[2,55]},{20:[1,106],31:[1,107]},{20:[2,62],31:[2,62]},{29:[1,33],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49],54:108,55:[1,93]},{1:[2,58],7:[2,58],20:[2,58],29:[2,58],31:[2,58],33:[2,58],35:[2,58],36:[2,58],37:[2,58],38:[2,58],39:[2,58],40:[2,58],41:[2,58],42:[2,58],43:[2,58],44:[2,58],45:[2,58],46:[2,58],47:[2,58],48:[2,58],49:[2,58],50:[2,58],55:[2,58],56:[2,58],61:[2,58]},{6:32,7:[1,17],56:[1,109]},{20:[2,32],29:[1,33],31:[2,32],35:[1,34],36:[1,35],37:[1,36],38:[1,37],39:[1,38],40:[1,39],41:[1,40],42:[1,41],43:[1,42],44:[1,43],45:[1,44],46:[1,45],47:[1,46],48:[1,47],49:[1,48],50:[1,49]},{54:110,55:[1,93]},{27:[1,111]},{1:[2,65],7:[2,65],20:[2,65],29:[2,65],31:[2,65],33:[2,65],35:[2,65],36:[2,65],37:[2,65],38:[2,65],39:[2,65],40:[2,65],41:[2,65],42:[2,65],43:[2,65],44:[2,65],45:[2,65],46:[2,65],47:[2,65],48:[2,65],49:[2,65],50:[2,65],55:[2,65],56:[2,65],61:[2,65]},{1:[2,59],7:[2,59],20:[2,59],29:[2,59],31:[2,59],33:[2,59],35:[2,59],36:[2,59],37:[2,59],38:[2,59],39:[2,59],40:[2,59],41:[2,59],42:[2,59],43:[2,59],44:[2,59],45:[2,59],46:[2,59],47:[2,59],48:[2,59],49:[2,59],50:[2,59],55:[2,59],56:[2,59],61:[2,59]},{1:[2,60],7:[2,60],20:[2,60],29:[2,60],31:[2,60],33:[2,60],35:[2,60],36:[2,60],37:[2,60],38:[2,60],39:[2,60],40:[2,60],41:[2,60],42:[2,60],43:[2,60],44:[2,60],45:[2,60],46:[2,60],47:[2,60],48:[2,60],49:[2,60],50:[2,60],55:[2,60],56:[2,60]},{20:[2,63],31:[2,63]}],
defaultActions: {},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

// End Grammar




var n = require('./nodes');

// This is taken from
// https://github.com/cjihrig/jsparser
function SourceLocation(source, start, end, loc) {
    this.source = source;
    this.start = start;
    this.end = end;
}

function createLoc(firstToken, lastToken) {
    return new SourceLocation(
        null,
        new Position(firstToken.first_line, firstToken.first_column),
        new Position(lastToken.last_line, lastToken.last_column)
    );
}

function Position(line, column) {
    this.line = line;
    this.column = column;
}

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = grammar;
exports.Parser = grammar.Parser;
exports.parse = function () { return grammar.parse.apply(grammar, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}