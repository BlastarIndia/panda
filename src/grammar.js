/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var grammar = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"Expressions":4,"Expression":5,"Terminator":6,"NEWLINE":7,"Literal":8,"Call":9,"Operator":10,"GetConstant":11,"SetConstant":12,"DefLocal":13,"SetLocal":14,"GetLocal":15,"Def":16,"If":17,"(":18,")":19,"NUMBER":20,"STRING":21,"TRUE":22,"FALSE":23,"NONE":24,"COMMENT":25,"IDENTIFIER":26,"Arguments":27,".":28,"ArgList":29,",":30,"+":31,"-":32,"*":33,"/":34,"<":35,">":36,">=":37,"<=":38,"==":39,"!=":40,"+=":41,"-=":42,"*=":43,"/=":44,"OR":45,"AND":46,"NOT":47,"VAR":48,"=":49,"Block":50,"START_BLOCK":51,"END_BLOCK":52,"DEF":53,"ParamList":54,"IfBlock":55,"IF":56,"ELSE":57,"$accept":0,"$end":1},
terminals_: {2:"error",7:"NEWLINE",11:"GetConstant",12:"SetConstant",18:"(",19:")",20:"NUMBER",21:"STRING",22:"TRUE",23:"FALSE",24:"NONE",25:"COMMENT",26:"IDENTIFIER",28:".",30:",",31:"+",32:"-",33:"*",34:"/",35:"<",36:">",37:">=",38:"<=",39:"==",40:"!=",41:"+=",42:"-=",43:"*=",44:"/=",45:"OR",46:"AND",47:"NOT",48:"VAR",49:"=",51:"START_BLOCK",52:"END_BLOCK",53:"DEF",56:"IF",57:"ELSE"},
productions_: [0,[3,0],[3,1],[4,1],[4,3],[4,2],[4,2],[4,1],[6,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[5,3],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[9,2],[9,4],[27,2],[27,3],[29,1],[29,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,2],[10,2],[13,4],[14,3],[15,1],[50,2],[50,3],[16,6],[54,0],[54,1],[54,3],[55,3],[55,5],[17,1],[17,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
            this.$ = new n.Nodes(null, createLoc(_$[$0], _$[$0]));
        
break;
case 2:
            this.$ = new n.Nodes($$[$0], createLoc(_$[$0], _$[$0]));
            return this.$;
        
break;
case 3:
            this.$ = new n.Nodes([$$[$0]], createLoc(_$[$0], _$[$0]));
        
break;
case 4:
            this.$ = $$[$0-2].addNode($$[$0]);
        
break;
case 5:
            this.$ = $$[$0-1];
        
break;
case 6:
            this.$ = $$[$0];
        
break;
case 7:
            this.$ = [];
        
break;
case 19:
            this.$ = $$[$0-1];
        
break;
case 20:
            this.$ = new n.NumberNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 21:
            this.$ = new n.StringNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 22:
            this.$ = new n.BooleanNode(true, createLoc(_$[$0], _$[$0]));
        
break;
case 23:
            this.$ = new n.BooleanNode(false, createLoc(_$[$0], _$[$0]));
        
break;
case 24:
            this.$ = new n.NoneNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 25:
            this.$ = new n.CommentNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 26:
            this.$ = new n.CallNode(null, $$[$0-1], $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 27:
            this.$ = new n.CallNode($$[$0-3], $$[$0-1], $$[$0], createLoc(_$[$0-3], _$[$0]));
        
break;
case 28:
            this.$ = [];
        
break;
case 29:
            this.$ = $$[$0-1];
        
break;
case 30:
            this.$ = [$$[$0]];
        
break;
case 31:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 32:
            this.$ = new n.OperatorNode('+', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 33:
            this.$ = new n.OperatorNode('-', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 34:
            this.$ = new n.OperatorNode('*', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 35:
            this.$ = new n.OperatorNode('/', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 36:
            this.$ = new n.OperatorNode('<', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 37:
            this.$ = new n.OperatorNode('>', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 38:
            this.$ = new n.OperatorNode('>=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 39:
            this.$ = new n.OperatorNode('<=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 40:
            this.$ = new n.OperatorNode('==', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 41:
            this.$ = new n.OperatorNode('!=', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 46:
            this.$ = new n.OperatorNode('OR', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 47:
            this.$ = new n.OperatorNode('AND', $$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 48:
            this.$ = new n.UnaryNode('NOT', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 49:
            this.$ = new n.UnaryNode('-', $$[$0], createLoc(_$[$0-1], _$[$0]));
        
break;
case 50:
            this.$ = new n.DefLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-3], _$[$0-1]));
        
break;
case 51:
            this.$ = new n.SetLocalNode($$[$0-2], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 52:
            this.$ = new n.GetLocalNode($$[$0], createLoc(_$[$0], _$[$0]));
        
break;
case 53:
            this.$ = [];
        
break;
case 54:
            this.$ = $$[$0-1];
        
break;
case 55:
            this.$ = new n.DefNode($$[$0-4], $$[$0-2], $$[$0], createLoc(_$[$0-5], _$[$0]));
        
break;
case 56:
            this.$ = [];
        
break;
case 57:
            this.$ = [$$[$0]];
        
break;
case 58:
            this.$ = $$[$0-2].concat($$[$0]);
        
break;
case 59:
            this.$ = new n.IfNode($$[$0-1], $$[$0], createLoc(_$[$0-2], _$[$0]));
        
break;
case 60:
            this.$ = $$[$0-4].addElse($$[$0-1], $$[$0], false);
        
break;
case 62:
            this.$ = $$[$0-2].addElse(null, $$[$0], true);
        
break;
}
},
table: [{1:[2,1],3:1,4:2,5:3,6:4,7:[1,16],8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[3]},{1:[2,2],6:30,7:[1,16]},{1:[2,3],7:[2,3],28:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],52:[2,3]},{1:[2,7],4:48,5:3,6:4,7:[1,16],8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],52:[2,7],53:[1,27],55:28,56:[1,29]},{1:[2,9],7:[2,9],19:[2,9],28:[2,9],30:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[2,9],41:[2,9],42:[2,9],43:[2,9],44:[2,9],45:[2,9],46:[2,9],51:[2,9],52:[2,9]},{1:[2,10],7:[2,10],19:[2,10],28:[2,10],30:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],41:[2,10],42:[2,10],43:[2,10],44:[2,10],45:[2,10],46:[2,10],51:[2,10],52:[2,10]},{1:[2,11],7:[2,11],19:[2,11],28:[2,11],30:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],41:[2,11],42:[2,11],43:[2,11],44:[2,11],45:[2,11],46:[2,11],51:[2,11],52:[2,11]},{1:[2,12],7:[2,12],19:[2,12],28:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],41:[2,12],42:[2,12],43:[2,12],44:[2,12],45:[2,12],46:[2,12],51:[2,12],52:[2,12]},{1:[2,13],7:[2,13],19:[2,13],28:[2,13],30:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],41:[2,13],42:[2,13],43:[2,13],44:[2,13],45:[2,13],46:[2,13],51:[2,13],52:[2,13]},{1:[2,14],7:[2,14],19:[2,14],28:[2,14],30:[2,14],31:[2,14],32:[2,14],33:[2,14],34:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],42:[2,14],43:[2,14],44:[2,14],45:[2,14],46:[2,14],51:[2,14],52:[2,14]},{1:[2,15],7:[2,15],19:[2,15],28:[2,15],30:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],42:[2,15],43:[2,15],44:[2,15],45:[2,15],46:[2,15],51:[2,15],52:[2,15]},{1:[2,16],7:[2,16],19:[2,16],28:[2,16],30:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],42:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],51:[2,16],52:[2,16]},{1:[2,17],7:[2,17],19:[2,17],28:[2,17],30:[2,17],31:[2,17],32:[2,17],33:[2,17],34:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],41:[2,17],42:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],51:[2,17],52:[2,17]},{1:[2,18],7:[2,18],19:[2,18],28:[2,18],30:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],41:[2,18],42:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],51:[2,18],52:[2,18]},{5:49,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[2,8],7:[2,8],11:[2,8],12:[2,8],18:[2,8],20:[2,8],21:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],32:[2,8],47:[2,8],48:[2,8],52:[2,8],53:[2,8],56:[2,8]},{1:[2,20],7:[2,20],19:[2,20],28:[2,20],30:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],41:[2,20],42:[2,20],43:[2,20],44:[2,20],45:[2,20],46:[2,20],51:[2,20],52:[2,20]},{1:[2,21],7:[2,21],19:[2,21],28:[2,21],30:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],41:[2,21],42:[2,21],43:[2,21],44:[2,21],45:[2,21],46:[2,21],51:[2,21],52:[2,21]},{1:[2,22],7:[2,22],19:[2,22],28:[2,22],30:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],41:[2,22],42:[2,22],43:[2,22],44:[2,22],45:[2,22],46:[2,22],51:[2,22],52:[2,22]},{1:[2,23],7:[2,23],19:[2,23],28:[2,23],30:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],41:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],51:[2,23],52:[2,23]},{1:[2,24],7:[2,24],19:[2,24],28:[2,24],30:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],41:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],51:[2,24],52:[2,24]},{1:[2,25],7:[2,25],19:[2,25],28:[2,25],30:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],41:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],51:[2,25],52:[2,25]},{1:[2,52],7:[2,52],18:[1,52],19:[2,52],27:50,28:[2,52],30:[2,52],31:[2,52],32:[2,52],33:[2,52],34:[2,52],35:[2,52],36:[2,52],37:[2,52],38:[2,52],39:[2,52],40:[2,52],41:[2,52],42:[2,52],43:[2,52],44:[2,52],45:[2,52],46:[2,52],49:[1,51],51:[2,52],52:[2,52]},{5:53,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:54,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{26:[1,55]},{26:[1,56]},{1:[2,61],7:[2,61],19:[2,61],28:[2,61],30:[2,61],31:[2,61],32:[2,61],33:[2,61],34:[2,61],35:[2,61],36:[2,61],37:[2,61],38:[2,61],39:[2,61],40:[2,61],41:[2,61],42:[2,61],43:[2,61],44:[2,61],45:[2,61],46:[2,61],51:[2,61],52:[2,61],57:[1,57]},{5:58,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[2,5],5:59,7:[2,5],8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],52:[2,5],53:[1,27],55:28,56:[1,29]},{26:[1,60]},{5:61,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:62,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:63,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:64,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:65,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:66,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:67,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:68,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:69,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:70,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:71,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:72,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:73,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:74,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:75,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:76,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[2,6],6:30,7:[1,16],52:[2,6]},{19:[1,77],28:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47]},{1:[2,26],7:[2,26],19:[2,26],28:[2,26],30:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],41:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],51:[2,26],52:[2,26]},{5:78,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{5:81,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],19:[1,79],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],29:80,32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[2,48],7:[2,48],19:[2,48],28:[1,31],30:[2,48],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,48],52:[2,48]},{1:[2,49],7:[2,49],19:[2,49],28:[1,31],30:[2,49],31:[2,49],32:[2,49],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,49],40:[2,49],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,49],46:[2,49],51:[2,49],52:[2,49]},{49:[1,82]},{18:[1,83]},{50:84,51:[1,86],56:[1,85]},{28:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],50:87,51:[1,86]},{1:[2,4],7:[2,4],28:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],52:[2,4]},{18:[1,52],27:88},{1:[2,32],7:[2,32],19:[2,32],28:[1,31],30:[2,32],31:[2,32],32:[2,32],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,32],40:[2,32],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,32],46:[2,32],51:[2,32],52:[2,32]},{1:[2,33],7:[2,33],19:[2,33],28:[1,31],30:[2,33],31:[2,33],32:[2,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,33],40:[2,33],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,33],46:[2,33],51:[2,33],52:[2,33]},{1:[2,34],7:[2,34],19:[2,34],28:[1,31],30:[2,34],31:[2,34],32:[2,34],33:[2,34],34:[2,34],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,34],40:[2,34],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,34],46:[2,34],51:[2,34],52:[2,34]},{1:[2,35],7:[2,35],19:[2,35],28:[1,31],30:[2,35],31:[2,35],32:[2,35],33:[2,35],34:[2,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,35],40:[2,35],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,35],46:[2,35],51:[2,35],52:[2,35]},{1:[2,36],7:[2,36],19:[2,36],28:[1,31],30:[2,36],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,36],52:[2,36]},{1:[2,37],7:[2,37],19:[2,37],28:[1,31],30:[2,37],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,37],52:[2,37]},{1:[2,38],7:[2,38],19:[2,38],28:[1,31],30:[2,38],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,38],52:[2,38]},{1:[2,39],7:[2,39],19:[2,39],28:[1,31],30:[2,39],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,39],52:[2,39]},{1:[2,40],7:[2,40],19:[2,40],28:[1,31],30:[2,40],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,40],40:[2,40],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,40],46:[2,40],51:[2,40],52:[2,40]},{1:[2,41],7:[2,41],19:[2,41],28:[1,31],30:[2,41],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[2,41],40:[2,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,41],46:[2,41],51:[2,41],52:[2,41]},{1:[2,42],7:[2,42],19:[2,42],28:[1,31],30:[2,42],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,42],52:[2,42]},{1:[2,43],7:[2,43],19:[2,43],28:[1,31],30:[2,43],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,43],52:[2,43]},{1:[2,44],7:[2,44],19:[2,44],28:[1,31],30:[2,44],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,44],52:[2,44]},{1:[2,45],7:[2,45],19:[2,45],28:[1,31],30:[2,45],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],51:[2,45],52:[2,45]},{1:[2,46],7:[2,46],19:[2,46],28:[1,31],30:[2,46],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,46],46:[1,47],51:[2,46],52:[2,46]},{1:[2,47],7:[2,47],19:[2,47],28:[1,31],30:[2,47],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,47],46:[2,47],51:[2,47],52:[2,47]},{1:[2,19],7:[2,19],19:[2,19],28:[2,19],30:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],41:[2,19],42:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],51:[2,19],52:[2,19]},{1:[2,51],7:[2,51],19:[2,51],28:[1,31],30:[2,51],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,51],46:[2,51],51:[2,51],52:[2,51]},{1:[2,28],7:[2,28],19:[2,28],28:[2,28],30:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],41:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],51:[2,28],52:[2,28]},{19:[1,89],30:[1,90]},{19:[2,30],28:[1,31],30:[2,30],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47]},{5:91,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{19:[2,56],26:[1,93],30:[2,56],54:92},{1:[2,62],7:[2,62],19:[2,62],28:[2,62],30:[2,62],31:[2,62],32:[2,62],33:[2,62],34:[2,62],35:[2,62],36:[2,62],37:[2,62],38:[2,62],39:[2,62],40:[2,62],41:[2,62],42:[2,62],43:[2,62],44:[2,62],45:[2,62],46:[2,62],51:[2,62],52:[2,62]},{5:94,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{4:96,5:3,6:4,7:[1,16],8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],52:[1,95],53:[1,27],55:28,56:[1,29]},{1:[2,59],7:[2,59],19:[2,59],28:[2,59],30:[2,59],31:[2,59],32:[2,59],33:[2,59],34:[2,59],35:[2,59],36:[2,59],37:[2,59],38:[2,59],39:[2,59],40:[2,59],41:[2,59],42:[2,59],43:[2,59],44:[2,59],45:[2,59],46:[2,59],51:[2,59],52:[2,59],57:[2,59]},{1:[2,27],7:[2,27],19:[2,27],28:[2,27],30:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],41:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],51:[2,27],52:[2,27]},{1:[2,29],7:[2,29],19:[2,29],28:[2,29],30:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],41:[2,29],42:[2,29],43:[2,29],44:[2,29],45:[2,29],46:[2,29],51:[2,29],52:[2,29]},{5:97,8:5,9:6,10:7,11:[1,8],12:[1,9],13:10,14:11,15:12,16:13,17:14,18:[1,15],20:[1,17],21:[1,18],22:[1,19],23:[1,20],24:[1,21],25:[1,22],26:[1,23],32:[1,25],47:[1,24],48:[1,26],53:[1,27],55:28,56:[1,29]},{1:[2,50],7:[2,50],19:[2,50],28:[1,31],30:[2,50],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[2,50],46:[2,50],51:[2,50],52:[2,50]},{19:[1,98],30:[1,99]},{19:[2,57],30:[2,57]},{28:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],50:100,51:[1,86]},{1:[2,53],7:[2,53],19:[2,53],28:[2,53],30:[2,53],31:[2,53],32:[2,53],33:[2,53],34:[2,53],35:[2,53],36:[2,53],37:[2,53],38:[2,53],39:[2,53],40:[2,53],41:[2,53],42:[2,53],43:[2,53],44:[2,53],45:[2,53],46:[2,53],51:[2,53],52:[2,53],57:[2,53]},{6:30,7:[1,16],52:[1,101]},{19:[2,31],28:[1,31],30:[2,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47]},{50:102,51:[1,86]},{26:[1,103]},{1:[2,60],7:[2,60],19:[2,60],28:[2,60],30:[2,60],31:[2,60],32:[2,60],33:[2,60],34:[2,60],35:[2,60],36:[2,60],37:[2,60],38:[2,60],39:[2,60],40:[2,60],41:[2,60],42:[2,60],43:[2,60],44:[2,60],45:[2,60],46:[2,60],51:[2,60],52:[2,60],57:[2,60]},{1:[2,54],7:[2,54],19:[2,54],28:[2,54],30:[2,54],31:[2,54],32:[2,54],33:[2,54],34:[2,54],35:[2,54],36:[2,54],37:[2,54],38:[2,54],39:[2,54],40:[2,54],41:[2,54],42:[2,54],43:[2,54],44:[2,54],45:[2,54],46:[2,54],51:[2,54],52:[2,54],57:[2,54]},{1:[2,55],7:[2,55],19:[2,55],28:[2,55],30:[2,55],31:[2,55],32:[2,55],33:[2,55],34:[2,55],35:[2,55],36:[2,55],37:[2,55],38:[2,55],39:[2,55],40:[2,55],41:[2,55],42:[2,55],43:[2,55],44:[2,55],45:[2,55],46:[2,55],51:[2,55],52:[2,55]},{19:[2,58],30:[2,58]}],
defaultActions: {},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

// End Grammar




var n = require('./nodes');

// This is taken from
// https://github.com/cjihrig/jsparser
function SourceLocation(source, start, end, loc) {
    this.source = source;
    this.start = start;
    this.end = end;
}

function createLoc(firstToken, lastToken) {
    return new SourceLocation(
        null,
        new Position(firstToken.first_line, firstToken.first_column),
        new Position(lastToken.last_line, lastToken.last_column)
    );
}

function Position(line, column) {
    this.line = line;
    this.column = column;
}

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = grammar;
exports.Parser = grammar.Parser;
exports.parse = function () { return grammar.parse.apply(grammar, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}